name: build

on:
  pull_request:
    branches:
      - '*'
  push:
    branches:
      - 'main'
    tags:
      - '*'
  workflow_dispatch: {}

jobs:
  rust-build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -qy \
          protobuf-compiler

    - uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        override: true

    - uses: actions-rs/toolchain@v1
      with:
        toolchain: nightly
        components: rust-src, clippy, rustfmt
        override: false

    - name: Install bpf-linker
      run: |
        cargo install bpf-linker

    # TODO: Once we migrate the controller from Go to Rust,
    # add the controller build step here.

    - name: Clean dataplane
      working-directory: ./dataplane
      run: |
        make clean

    - name: Clean UDP Test Server
      working-directory: ./tools/udp-test-server
      run: |
        make clean

    - name: Build dataplane
      working-directory: ./dataplane
      run: |
        make build

    - name: Build UDP Test Server
      working-directory: ./tools/udp-test-server
      run: |
        make build
    
    # Clippy fails if you do not build the dataplane first because it's missing a dependency 
    # from cargo xtask build-ebpf. Clippy also fails if you run cargo xtask build-ebpf first.
    #
    # Why? As a side effect, it auto-generates dataplane/api-server/src/backend.rs with formatting
    # that makes clippy throw. There's no easy way to fix this side-effect. Therefore, we need to 
    # go in and surgically auto-format the file before we try to run clippy.
    # This is super ugly, but it works barring a more formal solution. 
    - name: Fix backends.rs formatting
      working-directory: ./dataplane/api-server
      run: |
        cargo fmt --manifest-path Cargo.toml -- src/backends.rs

    - name: Check formatting
      run: |
        make check.format.rust

    - name: Check clippy
      run: |
        make lint.rust
